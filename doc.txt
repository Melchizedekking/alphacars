e.target.value is where the value of inputted value is going to
higher order function is a function that accepts another function example map

another name for array is list

to partition the screen use window + direction left or right

map the square in the website and add a footer

font.google/icons

window dot for emoji

id
name
category
image
new price
old price

10 lamborghini models 

another type of div
 <>
</>
<React.Fragment className= ></React.Fragment>

example 1 of mapping


var numbers = [3, 56, 2, 48,5]

function double(x) {
  return x * 2;
}

const newNumbers = numbers.map(double)
console.log(newNumbers);

example 2 forEach;

var numbers = [3, 56, 2, 48,5];

var newNumbers = [];

function double(x) {
  newNumbers.push(x * 2);
}

numbers.forEach(double);

console.log(newNumbers);


example 3 filter

filter creates a new array by keeping the items that returns true.


var numbers = [3, 56, 2, 48,5];


const newNumbers = numbers.filter(function(num){
 return num > 10
});

console.log(newNumbers);


example 4 Reduce
Reduce accumulates a value by doing something to each item in an array.




var numbers = [3, 56, 2, 48,5];

var newNumbers = numbers.reduce(function(accumulator, currentNumber){
  return accumulator + currentNumber
},0)

console.log(newNumbers);




example 5 showing reduce with for each function

var numbers = [3, 56, 2, 48,5];

var newNumbers = 0;

numbers.forEach(function (currentNumber) {
  newNumbers += currentNumber
});

console.log(newNumbers);


example 6 find; find the first item that matches from an array

var numbers = [3, 56, 2, 48,5];

numbers.find(function (num){
  return num > 10;
})


example 7 findIndex; findIndex the index of the first item that matches.

var numbers = [3, 56, 2, 48,5];

numbers.findIndex(function (num){
  return num > 10;
})












